<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/aop https://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="masterDataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <!-- 数据库驱动 -->
        <property name="driverClass" value="${jdbc.master.driver}" />
        <!-- 相应驱动的jdbcUrl -->
        <property name="jdbcUrl" value="${jdbc.master.url}}" />
        <!-- 数据库的用户名 -->
        <property name="username" value="${jdbc.master.usermame}" />
        <!-- 数据库的密码 -->
        <property name="password" value="${jdbc.master.password}" />
        <!-- 检查数据库连接池中空闲连接的间隔时间，单位是分，默认值：240，如果要取消则设置为0 -->
        <property name="idleConnectionTestPeriodInMinutes" value="60" />
        <!-- 连接池中未使用的链接最大存活时间，单位是分，默认值：60，如果要永远存活设置为0 -->
        <property name="idleMaxAgeInMinutes" value="30" />
        <!-- 每个分区最大的连接数 -->
        <property name="maxConnectionsPerPartition" value="150" />
        <!-- 每个分区最小的连接数 -->
        <property name="minConnectionsPerPartition" value="5" />
    </bean>

    <bean id="slaveDataSource" class="com.jolbox.bonecp.BoneCPDataSource" destroy-method="close">
        <!-- 数据库驱动 -->
        <property name="driverClass" value="${jdbc.slave.driver}" />
        <!-- 相应驱动的jdbcUrl -->
        <property name="jdbcUrl" value="${jdbc.slave.url}}" />
        <!-- 数据库的用户名 -->
        <property name="username" value="${jdbc.slave.usermame}" />
        <!-- 数据库的密码 -->
        <property name="password" value="${jdbc.slave.password}" />
        <!-- 检查数据库连接池中空闲连接的间隔时间，单位是分，默认值：240，如果要取消则设置为0 -->
        <property name="idleConnectionTestPeriodInMinutes" value="60" />
        <!-- 连接池中未使用的链接最大存活时间，单位是分，默认值：60，如果要永远存活设置为0 -->
        <property name="idleMaxAgeInMinutes" value="30" />
        <!-- 每个分区最大的连接数 -->
        <property name="maxConnectionsPerPartition" value="150" />
        <!-- 每个分区最小的连接数 -->
        <property name="minConnectionsPerPartition" value="5" />
    </bean>

    <!-- 定义数据源，使用自己实现的数据源 -->
    <bean id="dataSource" class="com.lh.mysql.separation1.config.DynamicDataSource" >
        <!-- 设置多个数据源 -->
        <property name="targetDataSources" >
            <map key-type="java.lang.String" >
                <!-- 这个key需要和程序中的key一致 -->
                <entry key="master" value-ref="masterDataSource"/>
                <entry key="slave" value-ref="slaveDataSource"/>
            </map>
        </property>
        <!-- 设置默认的数据源，这里默认走写库 -->
        <property name="defaultTargetDataSource" ref="masterDataSource" />
    </bean>

    <!-- 定义事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!-- 定义事务策略 -->
    <tx:advice id="txAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <!--定义查询方法都是只读的 -->
            <tx:method name="query" read-only="true"/>
            <tx:method name="find" read-only="true"/>
            <tx:method name="get" read-only="true"/>

            <!-- 主库执行操作，事务传播行为定义为默认行为 -->
            <tx:method name="save" propagation="REQUIRED"/>
            <tx:method name="update" propagation="REQUIRED"/>
            <tx:method name="delete" propagation="REQUIRED"/>

            <!--其他方法使用默认事务策略 -->
            <tx:method name="*"/>
        </tx:attributes>
    </tx:advice>

    <!-- 定义AOP切面处理器 -->
    <bean class="com.lh.mysql.separation1.aop.DataSourceAspect" id="dataSourceAspect">
<!--        <aop:config>-->
<!--            &lt;!&ndash; 定义切面，所有的service的所有方法 &ndash;&gt;-->
<!--            <aop:pointcut id="txPointcut" expression="execution(* com.lh.mysql.service.*.*(..))"/>-->
<!--            &lt;!&ndash; 应用事务策略到Service切面 &ndash;&gt;-->
<!--            <aop:advisor advice-ref="txAdvice" pointcut-ref="txPointcut"/>-->

<!--            &lt;!&ndash; 将切面应用到自定义的切面处理器上，-9999保证该切面优先级最高执行 &ndash;&gt;-->
<!--            <aop:aspect ref="dataSourceAspect" order="-9999">-->
<!--                <aop:before method="before" pointcut-ref="txPointcut"/>-->
<!--            </aop:aspect>-->
<!--        </aop:config>-->

        <!-- 指定事务策略 -->
        <property name="txAdvice" ref="txAdvice" />
        <!-- 指定slave方法的前缀（非必须） -->
        <property name="slaveMethodStart" value="query,find,get"/>
    </bean>
</beans>